import React, {PropTypes} from 'react';import {withGoogleMap, GoogleMap, Polygon} from 'react-google-maps';import {findDOMNode} from 'react-dom';import keydown from 'react-keydown';import DrawingManager from "react-google-maps/lib/drawing/DrawingManager";import { gettext } from '../i18n/service.js';const GettingStartedGoogleMap = withGoogleMap(props => (  <GoogleMap    ref={props.onMapMounted}    defaultZoom={3}    defaultCenter={props.defaultCenter || {      lat: 24.727318,      lng: 46.709809    }}    defaultZoom={props.defaultZoom || 10}    onClick={(e) => props.onMapClick(e)}>    {props.isDraw?drawManager(props):''}    {props.polygon?      <Polygon      path={props.polygon} /> : '' }    <button type="button" onClick={props.onClickOutsideOfMap} className="btn btn-danger btn-circle">      <i className="glyphicon glyphicon-remove"></i>    </button>    {/*props.polygon?<button type="button" onClick={() => props.removePolygon()} className="btn btn-danger btn-clear-polygon">      {gettext('CLEAR')}    </button> : ''*/}    {props.polygon?<button type="button" onClick={() => props.onClickOutsideOfMap()} className="btn btn-primary btn-clear-polygon">      {gettext('SET')}    </button> : ''}  </GoogleMap>));const drawManager = (props) => (  <DrawingManager    defaultOptions={{      drawingControl: true,      drawingControlOptions: {        position: google.maps.ControlPosition.TOP_CENTER,        drawingModes: [          google.maps.drawing.OverlayType.POLYGON        ],      }    }}    onOverlayComplete={(e) => {      let coordinates = [];      _.map(e.overlay.latLngs.b[0].b, (latlng) => {        let point = {          lat: latlng.lat(),          lng: latlng.lng()        }        coordinates.push(point);      });      props.setPolygon(coordinates);    }}  />);export default class MapComponent extends React.Component {  constructor(props, context) {    super(props, context);  }  @keydown( 'esc' )    onEscKeyDown() {      this.props.onClickOutsideOfMap();    }  render() {    return (      <div>        <div          style={{            position: "absolute",            top: 0,            bottom: 0,            left: 0,            right: 0,            backgroundColor: "rgba(0,0,0,0.2)"          }}          onClick={this.props.onClickOutsideOfMap}        />        <GettingStartedGoogleMap          containerElement={            <div              className="mapModalWindow"              style={{                position: "fixed",                top: "50px",                bottom: "50px",                left: "50px",                right: "50px",                boxShadow: "0 0 21px 0 #616161",                zIndex: 1000              }}>            </div>          }          mapElement={            <div style={{ height: `100%` }} />          }          onClickOutsideOfMap={this.props.onClickOutsideOfMap}          defaultZoom={this.props.defaultZoom}          defaultCenter={this.props.defaultCenter}          onMapClick={this.props.onMapClick}          isDraw={this.props.isDraw}          polygon={this.props.polygon}          removePolygon={this.props.removePolygon}          setPolygon={this.props.setPolygon}/>      </div>    );  }}MapComponent.propTypes = {  onMapClick: PropTypes.func,  onClickOutsideOfMap: PropTypes.func,  onOkay: PropTypes.func,  onCancel: PropTypes.func,  defaultZoom: PropTypes.number,  defaultCenter: PropTypes.object,  hideMapEdit: PropTypes.func};